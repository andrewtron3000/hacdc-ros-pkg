<?xml version="1.0"?>

<robot
    xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">

    <!-- Included URDF Files -->
    <include filename="$(find irobotron_description)/urdf/materials.urdf.xacro" />
    <include filename="$(find irobotron_description)/urdf/create_wheel.xacro" />
    <include filename="$(find irobotron_description)/urdf/create_torso.xacro" />

    <!-- Properties (Constants) -->
    <property name="M_PI" value="3.14159"/>

    <property name="wheel_radius" value="0.032" />
    <property name="wheel_length" value="0.02" />
    <!-- <property name="caster_wheel_offset_y" value="0.17" /> -->
    <property name="wheel_reflect" value="0.70" />

    <property name="camera_down_tilt_rads" value="0.25" />
    
    <macro name="create">
        <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
             navigation stack depends on this frame -->
        <link name="base_footprint">
            <inertial>
                <mass value="0.0001" />
                <origin xyz="0 0 0" />        
                <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                         iyy="0.0001" iyz="0.0" 
                         izz="0.0001" />
            </inertial>

            <visual>
                <origin xyz="0 0 0" />        
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
                <material name="Green" />
            </visual>

            <collision>
                <origin xyz="0 0 ${baseheight/2 + wheel_radius}" rpy="0 0 0" />        
                <geometry>
                  <box size="0.001 0.001 0.001" />
                </geometry>
            </collision>
        </link>

        <joint name="base_footprint_joint" type="fixed">
            <origin xyz="0 0 ${baseheight/2 + wheel_radius}" rpy="0 0 0" />        
            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>

        <!-- Links and Joints (i.e., the robot) -->

        <robot_base linkname="base_link">
        </robot_base>
        <gazebo reference="base_link">
          <material>Gazebo/White</material>
        </gazebo>

        <joint name="rear_wheel_joint" type="continuous" >
            <origin xyz="-0.12 0 -0.035" rpy="0 0 0" />   
            <parent link="base_link" />
            <child link="rear_wheel_link"/>
            <axis xyz="0 1 0" />
            <anchor xyz="0 0 0" />
            <limit effort="10" velocity="100" k_velocity="0" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <link name="rear_wheel_link">
            <inertial>
                <mass value="0.001"/>
                <origin xyz="0 0 0" />
                <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
                          iyy="0.015218160428" iyz="-0.000004273467"
                          izz="0.011763977943" />
            </inertial>
            
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <sphere radius="0.008" />
                </geometry>
                <material name="Blue" />
            </visual>
            
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <sphere radius="0.008" />
                </geometry>
            </collision>
        </link>

        <gazebo reference="rear_wheel_link">
            <elem key="mu1" value="10.0" />
            <elem key="mu2" value="10.0" />
            <elem key="kp"  value="1000000.0" />
            <elem key="kd"  value="1.0" />
        </gazebo>

        <transmission type="pr2_mechanism_model/SimpleTransmission" name="rear_wheel_trans">
            <actuator name="rear_wheel_motor" />
            <joint name="rear_wheel_joint" />
            <mechanicalReduction>1.0</mechanicalReduction>
        </transmission>

        <joint name="base_caster_support_joint" type="continuous">
            <origin xyz="0.13 0 -0.023" rpy="0 0 0" />
            <parent link="base_link" />
            <child link="base_caster_support_link"/>
            
            <axis xyz="0 0 1" />
            <anchor xyz="0.01 0 0" />
            <limit effort="100" velocity="100" k_velocity="0" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <transmission type="pr2_mechanism_model/SimpleTransmission" name="base_caster_wheel_trans">
            <actuator name="base_caster_wheel_motor" />
            <joint name="base_caster_support_joint" />
            <mechanicalReduction>1.0</mechanicalReduction>
        </transmission>


        <link name="base_caster_support_link">
            <inertial>
                <mass value="25.0"/>
                <origin xyz="0 0 0" />
                <inertia ixx="0.01" ixy="0.0" ixz="0.0"
                         iyy="0.01" iyz="0.0"
                         izz="0.01" />
            </inertial>
            
            <visual>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="0.001" length="0.037" />
                </geometry>
            </visual>
            
            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="0.001" length="0.037" />
                </geometry>
            </collision>
        </link>

        <joint name="caster_wheel_joint" type="continuous">
            <origin xyz="-0.008 0 -0.0130" rpy="0 0 0" />
            <parent link="base_caster_support_link" />
            <child link="caster_wheel_link" />      
            
            <axis xyz="0 1 0" />
            <anchor xyz="0 0 0" />
            <limit effort="100" velocity="100" k_velocity="0" />
            <joint_properties damping="0.0" friction="0.0" />
        </joint>

        <transmission type="pr2_mechanism_model/SimpleTransmission" name="caster_wheel_trans">
            <actuator name="caster_wheel_motor" />
            <joint name="caster_wheel_joint" />
            <mechanicalReduction>1.0</mechanicalReduction>
        </transmission>

        <link name="caster_wheel_link">
            <inertial>
                <mass value="1.0" /> 
                <origin xyz="0 0 0" rpy="0 0 0" />
                <inertia  ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
                          iyy="0.015218160428" iyz="-0.000004273467"
                          izz="0.011763977943" />
            </inertial>
            
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="0.007" length="0.015" /> 
                </geometry>
            </visual>
            
            <collision>
            <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
            <geometry>
                    <cylinder radius="0.007" length="0.015" /> 
            </geometry>
            </collision>
        </link>

        <gazebo reference="caster_wheel_link">
            <elem key="mu1" value="50.0" />
            <elem key="mu2" value="50.0" />
            <elem key="kp"  value="1000000.0" />
            <elem key="kd"  value="1.0" />
        </gazebo>


        <!-- MACRO INSTANTIATION -->

        <create_wheel suffix="left" parent="base_link" reflect="${wheel_reflect}"/>
        <create_wheel suffix="right" parent="base_link" reflect="${wheel_reflect * -1.0}"/>

        <robot_link linkname="lefttorso" linklength="${torsolength}">
        </robot_link>
        <gazebo reference="lefttorso">
          <material>Gazebo/Blue</material>
        </gazebo>
        <robot_base_joint jointname="robot_base_joint_l" linkparent="base_link" linkchild="lefttorso">
          <origin xyz="0 0.111 ${baseheight/2}" rpy="0 0 0" />
        </robot_base_joint>

        <robot_link linkname="righttorso" linklength="${torsolength}">
        </robot_link>
        <gazebo reference="righttorso">
          <material>Gazebo/Blue</material>
        </gazebo>
        <robot_base_joint jointname="robot_base_joint_r" linkparent="base_link" linkchild="righttorso">
          <origin xyz="0 -0.111 ${baseheight/2}" rpy="0 0 0" />
        </robot_base_joint>

        <!-- CONTROLLERS -->

        <gazebo>
            <controller:diffdrive_plugin name="differential_drive_controller" plugin="libdiffdrive_plugin.so">
                <alwaysOn>true</alwaysOn>
                <update>100</update>
                <updateRate>100.0</updateRate>
                <leftJoint>base_link_right_wheel_joint</leftJoint>
                <rightJoint>base_link_left_wheel_joint</rightJoint>
                <wheelSeparation>${2.0 * wheel_reflect * (baseradius + 0.0125 + 0.025)}</wheelSeparation>
                <wheelDiameter>${wheel_radius*2}</wheelDiameter>
                <torque>50</torque>
                <interface:position name="position_iface_0"/>
                <robotNamespace>/</robotNamespace>
                <topicName>cmd_vel</topicName>
            </controller:diffdrive_plugin>

            <controller:gazebo_ros_p3d name="p3d_base_controller" plugin="libgazebo_ros_p3d.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <bodyName>base_link</bodyName>
                <topicName>base_pose_ground_truth</topicName>
                <gaussianNoise>0.01</gaussianNoise>
                <frameName>map</frameName>
                <xyzOffsets>0 0 0</xyzOffsets> 
                <rpyOffsets>0 0 0</rpyOffsets>
                <interface:position name="p3d_base_position"/>
            </controller:gazebo_ros_p3d>

            <canonicalBody>base_footprint</canonicalBody>

            <!-- this publishes empty joint_states due to no transmission, but
             triggering robot_state_publisher to publish tf between fixed joints in create,
             (e.g. base_laser_link for the base_scan frame) -->
            <controller:gazebo_ros_controller_manager name="gazebo_ros_controller_manager" plugin="libgazebo_ros_controller_manager.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <interface:audio name="gazebo_ros_controller_manager_dummy_iface" />
            </controller:gazebo_ros_controller_manager>
        </gazebo>

        <!-- GAZEBO MATERIALS -->

        <gazebo reference="base_link">
            <material>Create/GreyTextured</material>
        </gazebo>
        
        <gazebo reference="rear_wheel_link">
            <material>Create/Black</material>
        </gazebo>
        
        <gazebo reference="caster_wheel_link">
            <material>Create/White</material>
        </gazebo>
        
        <gazebo reference="base_caster_box_link">
            <material>Create/White</material>
        </gazebo>
        
        <gazebo reference="base_caster_support_link">
            <material>Create/White</material>
        </gazebo>

        <!-- CAMERAS -->
        
        <!-- stereo_left_camera -->
        <joint name="stereo_left_camera_joint" type="fixed">
          <origin xyz="0.02 -0.042 ${torsolength}" rpy="0 ${camera_down_tilt_rads} 0" />
          <parent link="lefttorso" />
          <child link="stereo_left_camera_link"/>
        </joint>
        <link name="stereo_left_camera_link">
          <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.001"  ixy="0.0"  ixz="0.0"
                     iyy="0.001"  iyz="0.0"
                     izz="0.001" />
          </inertial>
          <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
              <box size="0.01 0.05 0.025" />
            </geometry>
          </visual>
          <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
              <box size="0.01 0.05 0.025" />
            </geometry>
          </collision>
        </link>

        <gazebo reference="stereo_left_camera_link">
          <sensor:camera name="stereo_left_camera_sensor">
            <imageSize>352 288</imageSize>
            <imageFormat>L8</imageFormat>
            <hfov>45</hfov>
            <nearClip>0.1</nearClip>
            <farClip>100</farClip>
            <updateRate>10.0</updateRate>
            <controller:gazebo_ros_camera name="camera_controller" plugin="libgazebo_ros_camera.so">
              <alwaysOn>true</alwaysOn>
              <updateRate>10.0</updateRate>
              <cameraName>stereo</cameraName>
              <imageTopicName>left/image_rect</imageTopicName>
              <cameraInfoTopicName>left/camera_info</cameraInfoTopicName>
              <frameName>stereo_left_camera_link</frameName>
              <CxPrime>196.30799999999999</CxPrime>
              <Cx>170.184</Cx>
              <Cy>138.3720000000000</Cy>
              <Fx>434.66199999999998</Fx>
              <Fy>431.84800000000001</Fy>
              <!-- image_width / (2*tan(hfov_radian /2)) -->
              <focal_length>424.901587</focal_length>
            </controller:gazebo_ros_camera>
          </sensor:camera>
          <turnGravityOff>true</turnGravityOff>
          <material>Gazebo/Blue</material>
        </gazebo>
        
        <joint name="stereo_left_optical_joint" type="fixed">
          <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
          <parent link="stereo_left_camera_link" />
          <child link="stereo_left_optical_frame"/>
        </joint>
        <link name="stereo_left_optical_frame">
          <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.001"  ixy="0.0"  ixz="0.0"
                     iyy="0.001"  iyz="0.0"
                     izz="0.001" />
          </inertial>
          <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
              <box size="0.001 0.001 0.001" />
            </geometry>
          </visual>
          <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
              <box size="0.001 0.001 0.001" />
            </geometry>
          </collision>
        </link>

        <!-- LASER -->

        <joint name="base_laser_joint" type="fixed">
          <origin rpy="0 0 0" xyz="0.07 0.0 ${baseheight}"/>
          <parent link="base_link"/>
          <child link="base_laser_link"/>
        </joint>

        <link name="base_laser_link" type="laser">
          <inertial>
            <mass value="0.1"/>
            <origin xyz="0 0 0.0"/>
            <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
          </inertial>
          
          <visual>
            <origin rpy="0 0 0" xyz="0 0 0.0"/>
            <geometry>
              <cylinder radius=".05" length=".05"/>
            </geometry>
          </visual>
          
          <collision>
            <origin rpy="0 0 0" xyz="0 0 0.0"/>
            <geometry>
              <cylinder radius=".05" length=".05"/>
            </geometry>
          </collision>
        </link>

        <gazebo reference="base_laser_link">
          <sensor:ray name="base_laser_link">
            <resRange>0.1</resRange>
            <rayCount>640</rayCount>
            <rangeCount>640</rangeCount>
            <laserCount>1</laserCount>
            <origin>0.0 0.0 0.0</origin>
            <displayRays>true</displayRays>
            
            <minAngle>-100</minAngle> <!-- scans own arms if -135~+135 -->
            <maxAngle>100</maxAngle>
            
            <minRange>0.07</minRange>
            <maxRange>10.0</maxRange>
            <updateRate>20.0</updateRate>
            <controller:gazebo_ros_laser name="gazebo_ros_base_laser_link_controller" plugin="libgazebo_ros_laser.so">
              <gaussianNoise>0.005</gaussianNoise>
              <alwaysOn>true</alwaysOn>
              <updateRate>20.0</updateRate>
              <topicName>base_scan</topicName>
              <frameName>base_laser_link</frameName>
              <interface:laser name="gazebo_ros_base_laser_link_iface"/>
            </controller:gazebo_ros_laser>
          </sensor:ray>
          <material>Gazebo/Red</material>
        </gazebo>



    </macro>
</robot>
